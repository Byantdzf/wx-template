<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import {service} from './config.js'

  var ga = require('./ga.js')
  var GoogleAnalytics = ga.GoogleAnalytics
  var HitBuilders = ga.HitBuilders

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/tabBar/home/index',
        'pages/tabBar/party/index',
        'pages/tabBar/books/index',
        'pages/tabBar/users/index'
      ],
      'subPackages': [
        {
          'root': 'pages/home',
          'pages': [
            'search',
            'sharePay',
            'sharing',
            'information',
            'introducer',
            'swopWeChat',
            'giveGift',
            'addFriend'
          ]
        },
        {
          'root': 'pages/books',
          'pages': [
            'bookDetail'
          ]
        },
        {
          'root': 'pages/party',
          'pages': [
            'start_party'
          ]
        },
        {
          'root': 'pages/users',
          'pages': [
            'register',
            'integral',
            'myGift',
            'vipSetting',
            'vipData',
            'integralRecord',
            'myPay',
            'friendlist',
            'examineWeChat',
            'auditFriend',
            'intro',
            'unmarri',
            'vipImage',
            'loveLanguage',
            'sociability',
            'advantage',
            'addFriendSet',
            'upgradeVIP',
            'integralAddress',
            'upgradingVIP',
            'myTest',
            'myNews'
          ]
        }

      ],
      window: {
        navigationBarTitleText: '福恋',
        navigationBarTextStyle: 'black',
        navigationBarBackgroundColor: '#FFFFFF',
        backgroundColor: '#eaeaea',
        backgroundTextStyle: 'light',
        enablePullDownRefresh: true
      },
      tabBar: {
        color: '#707070',
        selectedColor: '#fb5c56',
        backgroundColor: '#fff',
        borderStyle: 'black',
        list: [{
          pagePath: 'pages/tabBar/home/index',
          selectedIconPath: './images/icon/map_active.png',
          iconPath: './images/icon/map.png',
          text: '首页'
        }, {
          pagePath: 'pages/tabBar/books/index',
          selectedIconPath: './images/icon/friends_active.png',
          iconPath: './images/icon/friends.png',
          text: '阅读'
        }, {
          pagePath: 'pages/tabBar/party/index',
          selectedIconPath: './images/icon/initiate_active.png',
          iconPath: './images/icon/initiate.png',
          text: '活动'
        }, {
          pagePath: 'pages/tabBar/users/index',
          selectedIconPath: './images/icon/my_active.png',
          iconPath: './images/icon/my.png',
          text: '我的'
        }]
      },
      networkTimeout: {
        request: 5000,
        downloadFile: 10000
      },
      debug: true
    }

    globalData = {
      user: null,
      cart: null,
      tracker: null
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch(options) {

    }

    onShow(options) {
      console.log(options)
      if (options.scene == 1037 || options.scene == 1038) {
        let uid = options.referrerInfo.extraData.uid
//      console.log(JSON.stringify(uid))
        wx.setStorageSync('uid', uid)
        wepy.login({
          success: (res) => {
            let code = res.code
            let data = {
              wechat_code: code
            }
            wx.request({
              url: service.register_infor,
              header: {
                'Content-Type': 'application/x-www-form-urlencoded'
              },
              method: 'get',
              data: data,
              success: function (res) {
                let isRregister = res.data.data.is_register
                if (isRregister == 1) {
                  wepy.login({
                    success: (res) => {
                      let codeV = res.code
                      wx.request({
                        url: service.skip + '/infor',
                        header: {'Content-Type': 'application/x-www-form-urlencoded'},
                        method: 'get',
                        data: {
                          wechat_code: codeV,
                          uid: uid
                        },
                        success: function (res) {
                          let token = res.data.data.access_token
                          wx.setStorageSync('token', token)
                          console.log('success')
                          console.log(res)
                        }
                      })
                    },
                    fail: (res) => {
                      console.log('wepy.login.fail:', res)
                    }
                  })
                } else {
                  wepy.getUserInfo({
                    success: (res) => {
                      let iv = res.iv
                      let encryptedData = res.encryptedData
                      wepy.login({
                        success: (res) => {
                          let codeV = res.code
                          wx.request({
                            url: service.skip,
                            header: {'Content-Type': 'application/x-www-form-urlencoded'},
                            method: 'get',
                            data: {
                              wechat_code: codeV,
                              uid: uid,
                              iv: iv,
                              encryptedData: encryptedData
                            },
                            success: function (res) {
                              let token = res.data.data.access_token
                              wx.setStorageSync('token', token)
                              console.log('success')
                              console.log(res)
                            }
                          })
                        },
                        fail: (res) => {
                          console.log('wepy.login.fail:', res)
                        }
                      })
                    },
                    fail: (res) => {
                    }
                  })
                }
              }
            })
          },
          fail: (res) => {
            console.log('wepy.login.fail:', res)
          }
        })
      }
    }

    onShareAppMessage(title = '福恋') {
      return {
        title: title,
//      path: '/pages/index_M.wpy',
        // imageUrl: '',
        success: function (res) {
          // 转发成功
          console.log(res.errMsg)
        },
        fail: function (res) {
          // 转发失败
          console.log(res.errMsg)
        }
      }
    }

    /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
    isObject(item) {
      return typeof item === 'object' && !this.isArray(item)
    }

    isArray(item) {
      return Object.prototype.toString.apply(item) === '[object Array]'
    }

    isUndefined(item) {
      return typeof item === 'undefined'
    }

    // Google analytics
    getTracker(name, text) {
      if (!this.globalData.tracker) {
        // 初始化GoogleAnalytics Tracker
        this.globalData.tracker = GoogleAnalytics.getInstance(this)
          .setAppName('福恋')
          .setAppVersion('v0.1')
          .newTracker('UA-98664364-7')
      }
      var t = this.globalData.tracker
      t.setScreenName(text)
      t.send(new HitBuilders.ScreenViewBuilder().build())
      t.send(new HitBuilders.ExceptionBuilder()
        .setDescription(wx.getStorageSync('message'))
        .setFatal(false).build())
      t.set('&uid', '12345')
      t.send(new HitBuilders.EventBuilder()
        .setCategory('UX')
        .setAction('User Sign In')
        .build())
    }

    /* ========================= 更新缓存信息 ======================== */

    $updateGlobalData(name, obj) {
      // 校验: globalData
      if (!this.globalData) return
      // 校验: 操作字段
      if (typeof name !== 'string' || name === '') return {}
      // 取已有信息
      const info = this.globalData[name] || {}
      // 更新缓存
      if (obj && this.isObject(obj)) {
        // Object合并第一层
        this.globalData[name] = Object.assign({}, info, obj)
      } else if (!this.isUndefined(obj)) {
        // 其他非undefined数据直接覆盖
        this.globalData[name] = obj
      }
      this.$apply && this.$apply()
      console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
      return this.globalData[name]
    }
  }
</script>

<style lang="less">
  @import "./styles/weui/index.less";
  @import "./styles/custom/index.less";
</style>
